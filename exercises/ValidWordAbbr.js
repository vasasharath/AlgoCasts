/*
An abbreviation of a word follows the form <first letter><number><last letter>. Below are some examples of word abbreviations:

a) it                      --> it    (no abbreviation)

     1
     ↓
b) d|o|g                   --> d1g

              1    1  1
     1---5----0----5--8
     ↓   ↓    ↓    ↓  ↓    
c) i|nternationalizatio|n  --> i18n

              1
     1---5----0
     ↓   ↓    ↓
d) l|ocalizatio|n          --> l10n
Assume you have a dictionary and given a word, find whether its abbreviation is unique in the dictionary. A word's abbreviation is unique if no other word from the dictionary has the same abbreviation.

Example:

Given dictionary = [ "deer", "door", "cake", "card" ]

isUnique("dear") -> false
isUnique("cart") -> true
isUnique("cane") -> false
isUnique("make") -> true
*/
class ValidWordAbbr {
    
    /**
     * @param {string[]} dictionary
     */
     
    constructor (dict) {
        this.set = {};
        
		// Process the dictionary into an object
		// key = abbreviation, value = word, ex. {h3o: "hello", s3y: "sunny"} 
		// We track the word because isUnique should return true if the abbr is generated by itself
		// Make the value null if more than one words in dict generate the same abbr
        for (var i=0; i<dict.length; i++) {
            var abbr = this.getAbbr(dict[i]);
            if (this.set[abbr] && this.set[abbr] != dict[i]) {
                this.set[abbr] = null;
            } else {
                this.set[abbr] = dict[i];
            }
        }
    }

    /** 
     * @param {string} word
     * @return {boolean}
     */
    isUnique (word) {
        var abbr = this.getAbbr(word);
        if (this.set[abbr] === undefined || this.set[abbr] === word) {
            return true;
        } else {
            return false;
        }
    };
    
    getAbbr (word) {
        var n = word.length;
        if (n < 3) {
            return word;
        } else {
            return word[0] + (n-2) + word[n-1];
        }
    }

    /** 
     * Your ValidWordAbbr object will be instantiated and called as such:
     * var obj = new ValidWordAbbr(dictionary)
     * var param_1 = obj.isUnique(word)
     */
    
}